# =============================================================================
# 마스토돈 자동봇 Python 의존성 파일
# =============================================================================
# 이 파일은 프로젝트 실행에 필요한 모든 Python 패키지를 정의합니다.
# 
# 설치 방법:
#   pip install -r requirements.txt
#
# 개발 환경 설치:
#   pip install -r requirements-dev.txt
# =============================================================================

# =============================================================================
# 핵심 의존성 (필수)
# =============================================================================

# 마스토돈 API 클라이언트
# 마스토돈 인스턴스와의 통신을 위한 공식 Python 라이브러리
Mastodon.py==1.8.1

# Google Sheets API
# Google Sheets와의 연동을 위한 라이브러리
gspread==6.1.4

# HTML 파싱 및 텍스트 처리
# 마스토돈 포스트의 HTML 콘텐츠를 파싱하기 위한 라이브러리
beautifulsoup4==4.12.3

# 시간대 처리
# 한국 시간대(KST) 처리를 위한 라이브러리
pytz==2024.2

# 스케줄링
# 주기적인 작업(캐시 정리, 통계 수집 등)을 위한 라이브러리
apscheduler==3.11.0

# =============================================================================
# 유틸리티 및 헬퍼 라이브러리
# =============================================================================

# 환경 변수 관리
# .env 파일에서 환경 변수를 로드하기 위한 라이브러리
python-dotenv==1.0.0

# HTTP 요청 라이브러리
# 외부 API 호출을 위한 라이브러리 (gspread의 의존성)
requests==2.31.0

# JSON 처리
# JSON 데이터 처리를 위한 라이브러리
jsonschema==4.20.0

# =============================================================================
# 성능 및 모니터링
# =============================================================================

# 시스템 모니터링
# 메모리 사용량, CPU 사용률 등을 모니터링하기 위한 라이브러리
psutil==5.9.6

# 성능 프로파일링
# 코드 성능을 분석하기 위한 라이브러리 (개발용)
# memory-profiler==0.61.0  # 주석 처리됨 (개발 시에만 필요)

# =============================================================================
# 테스트 및 개발 도구
# =============================================================================

# 테스트 프레임워크
# 단위 테스트 및 통합 테스트를 위한 라이브러리
pytest==7.4.3

# 테스트 커버리지
# 코드 커버리지를 측정하기 위한 라이브러리
pytest-cov==4.1.0

# 모킹 라이브러리
# 테스트에서 외부 의존성을 모킹하기 위한 라이브러리
pytest-mock==3.12.0

# =============================================================================
# 코드 품질 및 린팅
# =============================================================================

# 코드 포맷터
# 코드 스타일을 자동으로 정리하기 위한 라이브러리
black==23.11.0

# 린터
# 코드 품질을 검사하기 위한 라이브러리
flake8==6.1.0

# 타입 체커
# 정적 타입 검사를 위한 라이브러리
mypy==1.7.1

# =============================================================================
# 보안 관련
# =============================================================================

# 보안 취약점 검사
# 의존성의 보안 취약점을 검사하기 위한 라이브러리
safety==2.3.5

# 암호화 라이브러리
# 민감한 데이터 암호화를 위한 라이브러리
cryptography==41.0.8

# =============================================================================
# 로깅 및 디버깅
# =============================================================================

# 구조화된 로깅
# JSON 형태의 구조화된 로그를 생성하기 위한 라이브러리
structlog==23.2.0

# 로그 색상화
# 콘솔 로그에 색상을 추가하기 위한 라이브러리
colorlog==6.8.0

# =============================================================================
# 데이터 처리
# =============================================================================

# 데이터 검증
# 입력 데이터의 유효성을 검사하기 위한 라이브러리
pydantic==2.5.0

# 데이터 직렬화
# 객체를 JSON으로 직렬화하기 위한 라이브러리
marshmallow==3.20.1

# =============================================================================
# 네트워크 및 통신
# =============================================================================

# HTTP 클라이언트
# 고급 HTTP 요청을 위한 라이브러리
httpx==0.25.2

# 웹소켓 지원
# 실시간 통신을 위한 라이브러리 (향후 확장용)
websockets==12.0

# =============================================================================
# 캐싱 및 성능 최적화
# =============================================================================

# 메모리 캐싱
# 인메모리 캐싱을 위한 라이브러리
cachetools==5.3.2

# 비동기 지원
# 비동기 프로그래밍을 위한 라이브러리
asyncio-mqtt==0.16.1

# 시스템 모니터링
# 시스템 리소스 모니터링을 위한 라이브러리 (선택사항)
psutil==5.9.6

# =============================================================================
# 플러그인 시스템
# =============================================================================

# 플러그인 로더
# 동적 플러그인 로딩을 위한 라이브러리
importlib-metadata==6.8.0

# 플러그인 검색
# 플러그인을 자동으로 발견하기 위한 라이브러리
setuptools==69.0.2

# =============================================================================
# 문서화 및 도구
# =============================================================================

# 문서 생성
# API 문서를 자동으로 생성하기 위한 라이브러리
sphinx==7.2.6

# 마크다운 처리
# 마크다운 파일을 처리하기 위한 라이브러리
markdown==3.5.1

# =============================================================================
# 배포 및 운영
# =============================================================================

# 프로세스 관리
# 봇 프로세스를 관리하기 위한 라이브러리
supervisor==4.2.5

# 설정 관리
# 설정 파일을 관리하기 위한 라이브러리
configparser==6.0.0

# =============================================================================
# 개발 환경 전용 (선택사항)
# =============================================================================

# 개발 서버
# 개발 중 핫 리로드를 위한 라이브러리
# watchdog==3.0.0  # 주석 처리됨 (개발 시에만 필요)

# 디버거
# 고급 디버깅을 위한 라이브러리
# ipdb==0.13.13  # 주석 처리됨 (개발 시에만 필요)

# =============================================================================
# 버전 호환성 정보
# =============================================================================
# 
# Python 버전: 3.8 이상
# 운영체제: Windows, macOS, Linux
# 
# 주요 호환성 노트:
# - Mastodon.py 1.8.1: 마스토돈 API v1 및 v2 지원
# - gspread 6.1.4: Google Sheets API v4 지원
# - beautifulsoup4 4.12.3: HTML5 파싱 지원
# - pytz 2024.2: 최신 시간대 데이터 포함
# - apscheduler 3.11.0: 비동기 스케줄링 지원
#
# 보안 업데이트:
# - requests 2.31.0: 최신 보안 패치 적용
# - cryptography 41.0.8: 최신 암호화 알고리즘 지원
# - safety 2.3.5: 의존성 보안 검사
#
# 성능 최적화:
# - psutil 5.9.6: 시스템 리소스 모니터링
# - cachetools 5.3.2: 메모리 효율적 캐싱
# - structlog 23.2.0: 고성능 로깅
#
# =============================================================================
# 설치 스크립트 예시
# =============================================================================
#
# # 기본 설치
# pip install -r requirements.txt
#
# # 개발 환경 설치
# pip install -r requirements.txt
# pip install -r requirements-dev.txt
#
# # 가상환경 생성 및 설치
# python -m venv .venv
# source .venv/bin/activate  # Linux/macOS
# .venv\Scripts\activate     # Windows
# pip install -r requirements.txt
#
# # 보안 검사
# safety check
#
# # 의존성 업데이트 확인
# pip list --outdated
#
# =============================================================================
